프로토콜(Protocol)

 - 컴퓨터들 간의 원활한 통신을 위해 지키기로 약속한 규약


IP 주소(Internet Protocol Address)

 - 컴퓨터 네트워크에서 장치들이 서로를 인식하고 통신을 하기 위해서 사용하는 특수한 번호 


IP(Internet Protocol)의 역할

 - 지정한 IP주소로 데이터를 패킷 단위로 전달하는 역할
 - 패킷을 받을 대상이 없거나 서비스 불능 상태여도 패킷을 전송
 - 중간에 패킷이 사라지거나 순서대로 오지 않을 위험이 존재


Public IP

 - 공인 ip는 공인기관에서 인증한 공개형 ip주소로 전세계에서 유일한 주소이다.


Private IP

 - 공인 IP주소의 부족현상을 해결하기 위해 공유기에 하나의 공인 IP를 할당받아 공유기로부터 사설IP 주소를 할당받아 사용한다.


게이트웨이(Gateway)

 - 게이트웨이는 라우터(공유기 등)의 주소이다. 
 - 라우터는 네트워크와 네트워크를 연결해주는 장비이다. 
 - 라우터에는 공인 ip와 사설 ip 둘다 가질 수 있는데, 이때 라우터가 가지는 사설 ip가 바로 게이트웨이다.


서브넷 마스크

 - 어디까지가 네트워크 식별자이고 어디서부터 호스트 식별자인지 구분하기 위해 필요한게 서브넷 마스크
 - IP에서 네트워크 식별자가 같다면 같은 네트워크 안에 있다는 뜻이고, 호스트 식별자는 같은 네트워크 안에서 각각의 컴퓨터를 구분하는 주소
 - IP주소(192.168.0.1)의 255로 이루어진 앞의 3칸(192.168.0)은 네트워크 식별자이고, 0으로 이루어진 마지막 칸(1)은 호스트 식별자이다.
 

루프백 주소(Loopback Address)

 - 127.0.0.1번으로 사용하는 특별한 주소이기에 어느 클래스에도 속하지 않는다. 
 - 자기가 사용하는 LAN 카드 자신을 의미한다.


TCP(Transmission Control Protocol)

 - 연결지향 3 Way Handshake
 - 데이터 전달 보장
 - 데이터 순서 보장
 - 신뢰할 수 있는 프로토콜
 - 현재는 대부분 TCP 사용


UDP(User Datagram Protocol)

 - 연결지향 X
 - 데이터 전달 보장 X
 - 데이터 순서 보장 X
 - 데이터 전달 및 순서가 보장되지 않지만, 단순하고 빠름
 - ip와 거의 같지만 port와 체크섬이 추가되었다.


포트(PORT)

 - 같은 IP 내에서 프로세스를 구분하는 역할
 - 0 ~ 65535 할당 가능
 - 0 ~ 1023 : 잘 알려진 포트로, 사용하지 않는 것이 좋다.
	FTP 	20, 21
	SSH	22
	TELNET 	23
	HTTP	80	
	HTTPS 	443	


URI(Uniform Resource Identifier)

 - 네트워크 자원 식별자로서 URL과 URN을 포함한다.


URL(Uniform Resource Locator)

 - 프로토콜(https)://호스트명(www.google.com):포트번호(443)/패스(/search)?쿼리파라미터(q=hello)로 구성
 - 프로토콜 : http, https, ftp 등을 사용
 - 호스트명 : 도메인명 또는 IP 주소를 사용
 - PORT	 : 일반적으로 생략, 생략시 http 80, https는 443
 - PATH  : 리소스의 경로, 계층적 구조
 - query : ?key=value& 형태



HTTP(HyperText Transfer Protocol)

 - HTTP는 서버와 클라이언트의 사이에서 어떻게 메시지를 교환할지를 정해놓은 규칙
 - 80번 포트를 사용하며 HTTP의 구조는 요청(Request)과 응답(Response)으로 구성


HTTP의 특징

 - 클라이언트 서버 구조(Request, Response 구조)
 - 무상태 프로토콜(스테이트리스), 비연결성
 - HTTP메시지
 - 단순함, 확장 가능


스테이트리스(Stateless)
 
 - 서버가 클라이언트의 상태를 보존하지 않음
 - 장점 : 서버 확장성이 높음(Scale Out)
 - 단점 : 클라이언트가 추가 데이터 전송을 해야 함
 - 클라이언트의 로그인한 상태를 유지하기 위해 쿠키와 세션등을 이용


쿠키(cookie)

 - 서버에서 받은 데이터를 브라우저를 사용하는 환경 (로컬 컴퓨터)에  저장한 파일
 - 로그인 정보 같이 다시 요청하기에는 비효율적인 정보를 로컬에 저장하여 생산성을 높임
 

세션(session)

 - 서버에서 유저의 인증상태(로그인 여부 등)를 임시로 저장한 파일
 - 임시로 유저의 정보를 저장해둠으로서 생산성을 높임
 - 서버에 저장해두기 때문에 쿠키보다 보안이 우수


캐시(cache)

 - 로컬 컴퓨터에 서버에서 받은 데이터를 저장한 파일
 - 이미지같은 파일이나 용량이 큰 리소스를 임시로 저장해두어 렌더링 속도를 높임


HTTP 메서드 종류

 - GET    : 리소스 조회 (쿼리 파라미터, 쿼리 스트링을 통해 전달)
 - POST   : 요청 데이터 처리, 주로 등록에 사용 (메시지 바디를 통해 서버로 요청 데이터 전달)
 - PUT    : 리소스를 대체, 해당 리소스가 없으면 생성
 - PATCH  : 리소스 부분 변경
 - DELETE : 리소스 삭제


HTTP 상태 코드

 - 1xx (Informational) : 요청이 수신되어 처리중
 - 2xx (Successful)    : 요청 정상 처리
 - 3xx (Redirection)   : 요청을 완료하려면 추가 행동이 필요
 - 4xx (Client Error)  : 클라이언트 오류, 잘못된 문법등으로 서버가 요청을 수행할 수 없음
 - 5xx (Server Error)  : 서버 오류, 서버가 정상 요청을 처리하지 못함


HTTPS(Hypertext Transfer Protocol Secure)

 - HTTPS는 HTTP에 보안 기능이 추가된 것으로 SSL/TLS 인증서로 보안하는 경우 URL 창에 표시된다.
 - 사용자는 브라우저 바의 잠금 기호를 클릭하여 인증서 발행, 웹사이트 소유 기업명을 포함한 인증서의 세부 내용을 확인할 수 있다.
 - SSL은 웹사이트와 브라우저(혹은, 두 서버) 사이에 전송된 데이터를 암호화하여 인터넷 연결을 보안을 유지하는 표준 기술
 - TLS는 가장 최신 기술로 더 강력한 버전의 SSL, 그러나 SSL이 더 일반적으로 사용되는 용어이기에, 여전히 보안 인증서는 SSL이라 불린다. 


NAT(Network Address Translation)

 - IP 패킷의 TCP/UDP 포트 숫자와 소스 및 목적지의 IP 주소 등을 재기록하면서 라우터를 통해 네트워크 트래픽을 주고 받는 기술
 - 여러 대의 호스트로 하나의 공인 IP 주소를 사용 가능하게 한다.
 - NAT는 내부 네트워크에서 사용하는 IP 주소와 외부에 드러나는 주소를 다르게 유지할 수 있기 때문에 내부 네트워크에 대한 어느 정도의 보안 기능을 한다.


포트포워딩(Port Forwarding)

 - 외부 포트, 내부 IP, 내부 포트를 지정해줌으로써 외부에서 사설 네트워크 장치 내 포트로 접속이 가능하게 하는 기술


DHCP(Dynamic Host Configuration Protocol)

 - 네트워크 안에 컴퓨터에 자동으로 네임 서버 주소, IP주소, 게이트웨이 주소를 할당해주고, 일정 기간 임대해 주는 동적 주소 할당 프로토콜이다.
 - IP를 효율적으로 사용 가능하고, IP를 자동으로 할당해주기 때문에 IP 충돌을 막을 수 있습니다.